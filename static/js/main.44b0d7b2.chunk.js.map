{"version":3,"sources":["Components/friendList/ friendListItem/FriendListItem.module.css","Components/transactionHistory/TransactionHistory.module.css","Components/profile/Profile.js","Components/statistics/Statistics.js","Components/friendList/ friendListItem/FriendListItem.js","Components/friendList/FriendList.js","Components/transactionHistory/TransactionHistory.js","Components/App.js","index.js"],"names":["module","exports","Profile","props","name","avatar","location","stats","tag","className","src","alt","Object","entries","map","stat","Statistics","title","colors","console","log","randomColor","arrayColors","color","rgb","min","max","rand","Math","random","round","randomInteger","length","style","backgroundColor","label","percentage","id","FriendListItem","isOnline","item","active","disabled","width","FriendList","friends","friend","TransactionHistory","items","s","transaction","head","row","type","amount","currency","App","user","statistic","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44b0d7b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"FriendListItem_status__1dfVs\",\"active\":\"FriendListItem_active__1SUN7 FriendListItem_status__1dfVs\",\"disabled\":\"FriendListItem_disabled__2_v6V FriendListItem_status__1dfVs\",\"item\":\"FriendListItem_item__1wiay\",\"name\":\"FriendListItem_name__1_1dl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction\":\"TransactionHistory_transaction__N90DC\",\"row\":\"TransactionHistory_row__pOkPs\",\"head\":\"TransactionHistory_head__lzH8O TransactionHistory_row__pOkPs\",\"item\":\"TransactionHistory_item__1lzlS\"};","import PropTypes from 'prop-types';\n\nconst Profile = (props) => {\n    const {name, avatar, location, stats, tag} = props;\n    return (\n        <>\n            <div className=\"profile\">\n                <div className=\"description\">\n                    <img\n                        src={avatar}\n                        alt=\"Аватар пользователя\"\n                        className=\"avatar\"\n                    />\n                    <p className=\"name\">{name}</p>\n                    <p className=\"tag\">{tag}</p>\n                    <p className=\"location\">{location}</p>\n                </div>\n                <ul className=\"stats\">\n                    {Object.entries(stats).map(stat => (\n                        <li key={stat[0]}>\n                            <span className=\"label\">{stat[0]}: </span>\n                            <span className=\"quantity\">{stat[1]}</span>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n\n        </>\n    );\n}\n\nProfile.propTypes = {\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.arrayOf(PropTypes.number.isRequired)\n}\n\nexport default Profile;","import PropTypes from 'prop-types';\nimport \"./style.css\"\n// import colors from \"../../data/colors\";\n\n\nconst Statistics = ({title, stats, colors}) => {\n    console.log(colors)\n\n    function randomInteger(min, max) {\n        let rand = min - 0.5 + Math.random() * (max - min + 1);\n        return Math.round(rand);\n    }\n\n    //\n    const randomColor = () => {\n        const arrayColors = colors.map(color => color.rgb);\n        return `rgb(${arrayColors[randomInteger(0, arrayColors.length - 1)]})`;\n    }\n\n    // const style = {\n    //     backgroundColor: randomColor(),\n    // }\n\n    return (\n        <section className=\"statistics\">\n            <h2 className=\"title\">{title !== 0 && title}</h2>\n\n            <ul className=\"stat-list\">\n                {stats.map(stat => (\n\n                    <li key={stat.id} className=\"item\" style={{backgroundColor: randomColor()}}>\n                        <span className=\"label\">{stat.label}</span>\n                        <span className=\"percentage\">{stat.percentage}%</span>\n                    </li>\n                ))}\n            </ul>\n        </section>\n    )\n}\n\nStatistics.propTypes = {\n    stats: PropTypes.arrayOf(PropTypes.shape({\n        id :PropTypes.string.isRequired,\n        label :PropTypes.string.isRequired,\n        percentage: PropTypes.number.isRequired,\n    }))\n}\n\nexport default Statistics;","import style from \"./FriendListItem.module.css\";\nimport PropTypes from \"prop-types\";\nimport FriendList from \"../FriendList\";\n\nconsole.log(style)\n\nconst FriendListItem = ({isOnline, avatar, name}) => {\n    return (\n        <li className={style.item}>\n            <span className={isOnline ? style.active : style.disabled}></span>\n            <img className=\"avatar\" src={avatar} alt={name} width=\"48\"/>\n            <p className={style.name}>{name}</p>\n        </li>\n  );\n}\n\n// FriendList.PropTypes = {\n//     friend: PropTypes.arrayOf(PropTypes.shape({\n//         // id: PropTypes.number.isRequired,\n//         name: PropTypes.string.isRequired,\n//         avatar: PropTypes.string.isRequired,\n//         isOnline: PropTypes.bool.isRequired,\n//     }))\n// }\n\nexport default FriendListItem;","import PropTypes from \"prop-types\";\nimport FriendListItem from \"./ friendListItem/FriendListItem\";\n\n\nconst FriendList = ({friends}) => {\n    return (\n        <ul className=\"friend-list\">\n            {friends.map(friend => (\n                <FriendListItem isOnline={friend.isOnline} name={friend.name} avatar={friend.avatar} key={friend.id} />\n            ))}\n        </ul>\n    );\n}\n\nexport default FriendList;","import s from \"./TransactionHistory.module.css\"\n\nconst TransactionHistory = ({items}) => {\n    console.log(items)\n    return (\n        <table className={s.transaction}>\n            <thead>\n            <tr className={s.head}>\n                <th>Type</th>\n                <th>Amount</th>\n                <th>Currency</th>\n            </tr>\n            </thead>\n            <tbody>\n            {items.map(item => (\n            <tr className={s.row} key={item.id}>\n                    <td>{item.type}</td>\n                    <td>{item.amount}</td>\n                    <td>{item.currency}</td>\n            </tr>\n            ))}\n            </tbody>\n        </table>\n    );\n}\n\nexport default TransactionHistory;\n","import React from \"react\";\nimport user from \"../data/user.json\"\nimport statistic from \"../data/statistical-data.json\"\nimport friends from \"../data/friends.json\"\nimport transactions from \"../data/transactions.json\"\nimport colors from \"../data/colors.json\";\nimport Profile from \"./profile/Profile\"\nimport Statistics from \"./statistics/Statistics\";\nimport FriendList from \"./friendList/FriendList\";\nimport TransactionHistory from \"./transactionHistory/TransactionHistory\";\n\nconst App = () => {\n    return (\n        <>\n            <Profile\n                name={user.name}\n                tag={user.tag}\n                location={user.location}\n                avatar={user.avatar}\n                stats={user.stats}\n            />\n            <Statistics title=\"Upload stats\" stats={statistic} colors={colors}/>\n            <FriendList friends={friends}/>\n            <TransactionHistory items={transactions}/>\n        </>\n\n    )\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n    <>\n        <App />\n    </>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}