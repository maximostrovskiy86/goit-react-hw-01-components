{"version":3,"sources":["Components/profile/Profile.module.css","Components/friendList/ friendListItem/FriendListItem.module.css","Components/transactionHistory/TransactionHistory.module.css","Components/statistics/Statistics.module.css","Components/profile/Profile.js","Components/statistics/Statistics.js","Components/friendList/ friendListItem/FriendListItem.js","Components/friendList/FriendList.js","Components/transactionHistory/TransactionHistory.js","Components/App.js","index.js"],"names":["module","exports","Profile","props","name","avatar","location","stats","tag","className","style","wrapper","h2","profile","description","src","alt","Object","entries","map","stat","item","label","Statistics","title","colors","randomColor","arrayColors","color","rgb","min","max","rand","Math","random","round","randomInteger","length","s","statistics","statList","backgroundColor","percentage","id","FriendListItem","isOnline","active","disabled","width","FriendList","friends","friend","TransactionHistory","items","console","log","transaction","head","row","type","amount","currency","App","user","statistic","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.403e39b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"h2\":\"Profile_h2__1UhPF\",\"wrapper\":\"Profile_wrapper__1wUmT\",\"profile\":\"Profile_profile__2KaqQ\",\"avatar\":\"Profile_avatar__18r88\",\"stats\":\"Profile_stats__3DwGS\",\"item\":\"Profile_item__2b01X\",\"description\":\"Profile_description__2mYOP\",\"label\":\"Profile_label__DNCYA\",\"quantity\":\"Profile_quantity__ILkZD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"FriendListItem_status__1dfVs\",\"active\":\"FriendListItem_active__1SUN7 FriendListItem_status__1dfVs\",\"disabled\":\"FriendListItem_disabled__2_v6V FriendListItem_status__1dfVs\",\"item\":\"FriendListItem_item__1wiay\",\"name\":\"FriendListItem_name__1_1dl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction\":\"TransactionHistory_transaction__N90DC\",\"row\":\"TransactionHistory_row__pOkPs\",\"head\":\"TransactionHistory_head__lzH8O TransactionHistory_row__pOkPs\",\"wrapper\":\"TransactionHistory_wrapper__36Rio\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"Statistics_statList__JTsUb\",\"item\":\"Statistics_item__2y5lm\",\"statistics\":\"Statistics_statistics__3pyb1\"};","import PropTypes from 'prop-types';\nimport style from \"./Profile.module.css\"\n\nconst Profile = (props) => {\n    const {name, avatar, location, stats, tag} = props;\n    return (\n        <div className={style.wrapper}>\n            <h2 className={style.h2}>User</h2>\n            <div className={style.profile}>\n                <div className={style.description}>\n                    <img\n                        src={avatar}\n                        alt=\"Аватар пользователя\"\n                        className={style.avatar}\n                    />\n                    <p className=\"name\">{name}</p>\n                    <p className=\"tag\">@{tag}</p>\n                    <p className=\"location\">{location}</p>\n                </div>\n                <ul className={style.stats}>\n                    {Object.entries(stats).map(stat => (\n                        <li className={style.item} key={stat[0]}>\n                            <span className={style.label}>{stat[0]}</span>\n                            <span className=\"quantity\">{stat[1]}</span>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n\n        </div>\n    );\n}\n\nProfile.propTypes = {\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.shape({\n        followers: PropTypes.number.isRequired,\n        views: PropTypes.number.isRequired,\n        likes: PropTypes.number.isRequired,\n    })\n}\n\nexport default Profile;","import PropTypes from 'prop-types';\nimport s from \"./Statistics.module.css\"\n\nconst Statistics = ({title, stats, colors}) => {\n    function randomInteger(min, max) {\n        let rand = min - 0.5 + Math.random() * (max - min + 1);\n        return Math.round(rand);\n    }\n\n    const randomColor = () => {\n        const arrayColors = colors.map(color => color.rgb);\n        return `rgb(${arrayColors[randomInteger(0, arrayColors.length - 1)]})`;\n    }\n\n    return (\n        <section className={s.statistics}>\n            {title.length && <h2 className=\"title\">{title}</h2>}\n            <ul className={s.statList}>\n                {stats.map(stat => (\n                    <li key={stat.id} className={s.item} style={{backgroundColor: randomColor()}}>\n                        <span className=\"label\">{stat.label}</span>\n                        <span className=\"percentage\">{stat.percentage}%</span>\n                    </li>\n                ))}\n            </ul>\n        </section>\n    )\n}\n\nStatistics.propTypes = {\n    stats: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        percentage: PropTypes.number.isRequired,\n    }))\n}\n\nexport default Statistics;","import style from \"./FriendListItem.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst FriendListItem = ({isOnline, avatar, name}) => {\n    return (\n        <li className={style.item}>\n            <span className={isOnline ? style.active : style.disabled}> </span>\n            <img className=\"avatar\" src={avatar} alt={name} width=\"48\"/>\n            <p className={style.name}>{name}</p>\n        </li>\n    );\n}\n\nFriendListItem.propTypes = {\n        name: PropTypes.string.isRequired,\n        avatar: PropTypes.string.isRequired,\n        isOnline: PropTypes.bool.isRequired,\n}\n\nexport default FriendListItem;","import FriendListItem from \"./ friendListItem/FriendListItem\";\nimport PropTypes from \"prop-types\";\n\nconst FriendList = ({friends}) => {\n    return (\n        <ul className=\"friend-list\">\n            <h2>Friends</h2>\n            {friends.map(friend => (\n                <FriendListItem isOnline={friend.isOnline} name={friend.name} avatar={friend.avatar} key={friend.id}/>\n            ))}\n        </ul>\n    );\n}\n\nFriendList.propTypes = {\n    friends: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n        })\n    )\n}\n\nexport default FriendList;","import s from \"./TransactionHistory.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst TransactionHistory = ({items}) => {\n    console.log(items)\n    return (\n        <div className={s.wrapper}>\n            <h2>Transactions</h2>\n            <table className={s.transaction}>\n                <thead>\n                <tr className={s.head}>\n                    <th>Type</th>\n                    <th>Amount</th>\n                    <th>Currency</th>\n                </tr>\n                </thead>\n                <tbody>\n                {items.map(item => (\n                    <tr className={s.row} key={item.id}>\n                        <td>{item.type}</td>\n                        <td>{item.amount}</td>\n                        <td>{item.currency}</td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nTransactionHistory.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired,\n        amount: PropTypes.string.isRequired,\n        currency: PropTypes.string.isRequired,\n    }))\n}\n\nexport default TransactionHistory;\n","import React from \"react\";\nimport Profile from \"./profile/Profile\";\nimport Statistics from \"./statistics/Statistics\";\nimport FriendList from \"./friendList/FriendList\";\nimport TransactionHistory from \"./transactionHistory/TransactionHistory\";\nimport user from \"../data/user.json\";\nimport statistic from \"../data/statistical-data.json\";\nimport friends from \"../data/friends.json\";\nimport transactions from \"../data/transactions.json\";\nimport colors from \"../data/colors.json\";\n\nconst App = () => {\n    return (\n        <>\n            <Profile\n                name={user.name}\n                tag={user.tag}\n                location={user.location}\n                avatar={user.avatar}\n                stats={user.stats}\n            />\n            <Statistics title=\"Upload stats\" stats={statistic} colors={colors}/>\n            <FriendList friends={friends}/>\n            <TransactionHistory items={transactions}/>\n        </>\n\n    )\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n    <>\n        <App />\n    </>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}